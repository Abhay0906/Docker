docker pull ubuntu    ----->> this will pull the ubuntu image from hub.docker.com

docker image ls       ------>> this will show the images downloaded in your instance

if we have to download any specific version of image:

docker pull ubuntu:2.39 --- >> but we need to know the version of containers available at hub.docker.com


docker search ubuntu   --- >> used to search the image

docker run -d --name <container-name> <image-name>:version   --- >> -d is detached mode (wont give login prompt)

docker ps -a                                       ---- >> this will show all containers in stop or started state

docker rename <oldname> <newname>                   ---- >> rename a container

docker system events                                ----- >> will capture all the events

docker logs <container-id>                          ----- >> will print the logs of container

docker exec <container-id> uptime                   ----- >> run command remotely on a container from docker host

docker inspect <container-id>                       ----- >> fetch details about a container


docker start <container-id>                         --- >> start a container thats exited

docker ps -f "status=exited"                        --- >> list exited containers

docker run -it busybox sh                           ---- >> run a new container and give shell prompt

docker run -d -p 8080:80 --name httpd2 httpd:latest   --- >> 8080 is host port and 80 is container port

docker exec -it <nameofcontainer> bash                ---- >> this will connect to a running container
we can try to exit out of this and this should not terminate the container.

docker cp <filenameorfoldername> <nameofcontainer>:/opt   --- >> copy snay file to container absolute path

docker diff <nameofcontainer>       --- >> this will show the changes we did after the container was spawnned

docker container commit <nameofcontainer> <id-of-dockerhubrepo>:tag     --- >> this will create an image locally on the docker host

docker commit -c 'CMD["redis-server"]' <container-id>                 --- >> this will add a new image with new CMD commadn

docker image history <id-of-image>    --- >> this will show the layers of image of the container

docker login                          --- >> this willhelp in loggin in to the docker hub so that images can be pushed

docker image push <image-name>:tag        ---- >> this will push the image to docker hub repository

docker system prune                       -------- >> delete every container and free up space on docker hosts

docker system prune -a                    ----------- >> deletes every container+images as well

docker create busybox echo hi there     --------- >> this will only create the container and wont start it:(run = create+start)

docker build -t name:tag Dockerfile 


docker run -p 3000:3000 -v /app/modules/node-modules -v /opt <image-id>


